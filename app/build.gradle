apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.kornilovmikhail.mvpandroidproject"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

detekt {
    version = "1.0.0-RC12"
    input = files("${project.rootDir}/${project.getName()}/src/main/java")
    config = files("${project.rootDir}/detekt/detekt-config.yml")
    filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt.html")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def appcompat_version = '1.0.2'
    def recyclerview_version = '1.1.0-alpha03'
    def retrofit2_version = "2.5.0"
    def room_version = '2.1.0-beta01'
    def moxyX_version = "1.7.0"
    def mockito_version = "2.25.0"
    def dagger_version = "2.21"
    def cicerone_version = "5.0.0"
    def espresso_version = "3.2.0-alpha04"
    def android_tests_version = "1.1.1"
    def coroutines_version = "1.1.1"
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //support libraries
    implementation "androidx.appcompat:appcompat:${appcompat_version}"
    implementation "androidx.recyclerview:recyclerview:${recyclerview_version}"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //tests
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:${mockito_version}"
    testImplementation "org.mockito:mockito-inline:${mockito_version}"
    androidTestImplementation "androidx.test:rules:${android_tests_version}"
    androidTestImplementation "androidx.test:runner:${android_tests_version}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espresso_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espresso_version}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espresso_version}"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit2_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2_version}"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    //room
    implementation "androidx.room:room-runtime:${room_version}"
    implementation "androidx.room:room-ktx:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"
    //moxy
    implementation "tech.schoolhelper:moxy-x:${moxyX_version}"
    kapt "tech.schoolhelper:moxy-x-compiler:${moxyX_version}"
    implementation "tech.schoolhelper:moxy-x-android:${moxyX_version}"
    implementation "tech.schoolhelper:moxy-x-androidx:${moxyX_version}"
    //dagger
    implementation "com.google.dagger:dagger-android:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    //cicerone
    implementation "ru.terrakok.cicerone:cicerone:${cicerone_version}"
    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}"
}
